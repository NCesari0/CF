# -*- coding: utf-8 -*-
"""ISTA_7D&7E_LogTag

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10a5vC29f3YqizLOzk-lC9OKAgmqtGB7Z
"""

import string
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import datetime as dt
from datetime import datetime,date

# Adjust Depending on # of tags
amb = pd.read_csv('/content/ISTA7D Ramping Profile.csv')
_1 = pd.read_csv('/content/UHADO-16- 632_1(ISTA7D) Started 9_18_2023, Finished 9_20_2023.csv')
_2 = pd.read_csv('/content/UHADO-16- 683_3(ISTA7D) Started 9_18_2023, Finished 9_20_2023.csv')
#_3 = pd.read_csv('/content/(3)-UHADO-16- A0C103255390 Started 12_8_2023, Finished 12_11_2023.csv')
ulist = [_1,_2]

"""Plot Temperature over 48 Hours"""

plt.style.use('seaborn-v0_8-whitegrid')
formlist = ['tag_1','tag_2'] # Adjust Depending on # of tags

amb = amb.drop(amb.columns[[5]], axis=1)
amb.set_axis(['Reading','Date','Time','Temp','Hum'],axis=1,inplace=True)
dtlist = []
for d,t in zip(amb['Date'].astype(str),amb['Time'].astype(str)):
  dt = d + ' ' + t
  dtlist.append(dt)
amb['dt'] = dtlist
plt.plot(amb['dt'],amb['Temp'],label='ISTA 7D')

for form,df in zip(formlist,ulist):
  df.set_axis(['Reading','Date','Time','Temp','Hum'],axis=1,inplace=True)

  # Clean Time and Date columns
  df['Time'] = pd.to_datetime(df['Time'])
  df['Time'] = amb['Time'].astype(str)
  df['Date'] = amb['Date'].astype(str)
  df['dt'] = amb['dt']

  ax = plt.plot(df['dt'].astype(str),df['Temp'],label=form)

# Change xlabels to 48 hour time
hl = list(range(0,50,2)) #<-- Adjust stop
timestamps = np.linspace(0, 2879, 25)#<-- Adjust num to be 1/2 of the stop
labels =[str(x) for x in hl]
plt.xticks(timestamps,labels=labels)

#Plot aesthetics
plt.xlim(0, 2879)
plt.legend()
plt.title('48HR ISTA 7D: HempBlack CruzCools 1 & 2 (1 24oz Gel Pack)')
plt.ylabel('Temperature [C]')
plt.xlabel('Hours')
# Critical Limit Line
#plt.axhline(21,color ='r')
plt.show()

plt.style.use('seaborn-v0_8-whitegrid')
formlist = ['Ambient','tag_1','tag_2'] # Adjust Depending on # of tags

#amb = amb.drop(amb.columns[[5]], axis=1)
#amb.set_axis(['Reading','Date','Time','Temp','Hum'],axis=1,inplace=True)

for form,df in zip(formlist,ulist):
  #df = df.drop(df.columns[[5]], axis=1)
  df.set_axis(['Reading','Date','Time','Temp','Hum','dat'],axis=1,inplace=True)

  # Clean Time and Date columns
  df['Time'] = pd.to_datetime(df['Time'])
  df['Time'] = amb['Time'].astype(str)
  df['Date'] = amb['Date'].astype(str)

  dtlist = []
  for d,t in zip(df['Date'].astype(str),df['Time'].astype(str)):
    dt = d + ' ' + t
    dtlist.append(dt)
  df['dt'] = dtlist
  df['df'] = str(df)
  ax = plt.plot(df['dt'],df['Temp'],label=form)

# Change xlabels to 48 hour time
hl = list(range(0,50,2)) #<-- Adjust stop
timestamps = np.linspace(0, 2879, 25)#<-- Adjust num
labels =[str(x) for x in hl]
plt.xticks(timestamps,labels=labels)

#Plot aesthetics
plt.xlim(0, 2879)
plt.legend()
plt.title('48HR ISTA 7D: 632_1 vs 683_3')
plt.ylabel('Temperature [C]')
plt.xlabel('Hours')
plt.axhline(21,color ='r')
plt.show()